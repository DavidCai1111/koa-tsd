import { ServerResponse, IncomingMessage } from 'http';
import { Socket } from 'net';
import { Koa } from './application';
import { IContext } from './context';
import { IRequest } from './request';
export interface IResponse {
    _body?: any;
    _explicitStatus?: Boolean;
    app?: Koa;
    res?: ServerResponse;
    req?: IncomingMessage;
    ctx?: IContext;
    request?: IRequest;
    socket?: Socket;
    header?: any;
    headers?: any;
    status?: number;
    message?: string;
    type?: string;
    body?: any;
    length?: any;
    headerSent?: Boolean;
    lastModified?: Date;
    etag?: string;
    writable?: Boolean;
    is?: (types: any) => any;
    redirect?: (url: string, alt: string) => void;
    attachment?: (filename?: string) => void;
    vary?: (field: string) => void;
    get?: (field: string) => string;
    set?: (field: any, val: any) => void;
    remove?: (field: string) => void;
    append?: (field: string, val: any) => void;
    toJSON?: () => any;
    inspect?: () => any;
}
export declare const koaResponse: IResponse;
