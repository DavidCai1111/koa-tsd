import { IncomingMessage, ServerResponse } from 'http';
import { Socket } from 'net';
import { Koa } from './application';
import { IContext } from './context';
import { IResponse } from './response';
export interface IRequest {
    _querycache?: string;
    app?: Koa;
    req?: IncomingMessage;
    res?: ServerResponse;
    response?: IResponse;
    ctx?: IContext;
    headers?: any;
    header?: any;
    method?: string;
    length?: any;
    url?: string;
    origin?: string;
    originalUrl?: string;
    href?: string;
    path?: string;
    querystring?: string;
    query?: any;
    search?: string;
    idempotent?: Boolean;
    socket?: Socket;
    protocol?: string;
    host?: string;
    hostname?: string;
    fresh?: Boolean;
    stale?: Boolean;
    charset?: string;
    secure?: Boolean;
    ips?: Array<string>;
    ip?: string;
    subdomains?: Array<string>;
    accept?: any;
    type?: string;
    accepts?: () => any;
    acceptsEncodings?: () => any;
    acceptsCharsets?: () => any;
    acceptsLanguages?: () => any;
    is?: (types: any) => any;
    toJSON?: () => any;
    inspect?: () => any;
    get?: (field: string) => string;
}
export declare let koaRequest: IRequest;
